{"D:\\Desktop Files\\Todo-Backend\\src\\modules\\Todo\\test\\todo.spec.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\modules\\Todo\\test\\todo.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":14},"end":{"line":6,"column":54}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":57}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":57}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"8":{"start":{"line":11,"column":15},"end":{"line":11,"column":36}},"9":{"start":{"line":12,"column":0},"end":{"line":55,"column":3}},"10":{"start":{"line":13,"column":4},"end":{"line":26,"column":7}},"11":{"start":{"line":14,"column":28},"end":{"line":14,"column":57}},"12":{"start":{"line":15,"column":8},"end":{"line":25,"column":11}},"13":{"start":{"line":21,"column":12},"end":{"line":22,"column":33}},"14":{"start":{"line":22,"column":16},"end":{"line":22,"column":33}},"15":{"start":{"line":23,"column":12},"end":{"line":23,"column":57}},"16":{"start":{"line":24,"column":12},"end":{"line":24,"column":19}},"17":{"start":{"line":27,"column":4},"end":{"line":40,"column":7}},"18":{"start":{"line":28,"column":28},"end":{"line":28,"column":69}},"19":{"start":{"line":29,"column":8},"end":{"line":39,"column":11}},"20":{"start":{"line":35,"column":12},"end":{"line":36,"column":33}},"21":{"start":{"line":36,"column":16},"end":{"line":36,"column":33}},"22":{"start":{"line":37,"column":12},"end":{"line":37,"column":55}},"23":{"start":{"line":38,"column":12},"end":{"line":38,"column":19}},"24":{"start":{"line":41,"column":4},"end":{"line":54,"column":7}},"25":{"start":{"line":42,"column":28},"end":{"line":42,"column":57}},"26":{"start":{"line":43,"column":8},"end":{"line":53,"column":11}},"27":{"start":{"line":49,"column":12},"end":{"line":50,"column":33}},"28":{"start":{"line":50,"column":16},"end":{"line":50,"column":33}},"29":{"start":{"line":51,"column":12},"end":{"line":51,"column":65}},"30":{"start":{"line":52,"column":12},"end":{"line":52,"column":19}},"31":{"start":{"line":56,"column":0},"end":{"line":70,"column":3}},"32":{"start":{"line":57,"column":4},"end":{"line":69,"column":7}},"33":{"start":{"line":58,"column":30},"end":{"line":58,"column":76}},"34":{"start":{"line":59,"column":8},"end":{"line":68,"column":11}},"35":{"start":{"line":64,"column":12},"end":{"line":65,"column":33}},"36":{"start":{"line":65,"column":16},"end":{"line":65,"column":33}},"37":{"start":{"line":66,"column":12},"end":{"line":66,"column":58}},"38":{"start":{"line":67,"column":12},"end":{"line":67,"column":19}},"39":{"start":{"line":71,"column":0},"end":{"line":98,"column":3}},"40":{"start":{"line":72,"column":4},"end":{"line":84,"column":7}},"41":{"start":{"line":73,"column":25},"end":{"line":73,"column":52}},"42":{"start":{"line":74,"column":8},"end":{"line":83,"column":11}},"43":{"start":{"line":79,"column":12},"end":{"line":80,"column":33}},"44":{"start":{"line":80,"column":16},"end":{"line":80,"column":33}},"45":{"start":{"line":81,"column":12},"end":{"line":81,"column":53}},"46":{"start":{"line":82,"column":12},"end":{"line":82,"column":19}},"47":{"start":{"line":85,"column":4},"end":{"line":97,"column":7}},"48":{"start":{"line":86,"column":25},"end":{"line":86,"column":39}},"49":{"start":{"line":87,"column":8},"end":{"line":96,"column":11}},"50":{"start":{"line":92,"column":12},"end":{"line":93,"column":33}},"51":{"start":{"line":93,"column":16},"end":{"line":93,"column":33}},"52":{"start":{"line":94,"column":12},"end":{"line":94,"column":83}},"53":{"start":{"line":95,"column":12},"end":{"line":95,"column":19}},"54":{"start":{"line":99,"column":0},"end":{"line":113,"column":3}},"55":{"start":{"line":100,"column":4},"end":{"line":112,"column":7}},"56":{"start":{"line":101,"column":25},"end":{"line":101,"column":40}},"57":{"start":{"line":102,"column":8},"end":{"line":111,"column":11}},"58":{"start":{"line":107,"column":12},"end":{"line":108,"column":33}},"59":{"start":{"line":108,"column":16},"end":{"line":108,"column":33}},"60":{"start":{"line":109,"column":12},"end":{"line":109,"column":89}},"61":{"start":{"line":110,"column":12},"end":{"line":110,"column":19}},"62":{"start":{"line":114,"column":0},"end":{"line":128,"column":3}},"63":{"start":{"line":115,"column":4},"end":{"line":127,"column":7}},"64":{"start":{"line":116,"column":25},"end":{"line":116,"column":40}},"65":{"start":{"line":117,"column":8},"end":{"line":126,"column":11}},"66":{"start":{"line":122,"column":12},"end":{"line":123,"column":33}},"67":{"start":{"line":123,"column":16},"end":{"line":123,"column":33}},"68":{"start":{"line":124,"column":12},"end":{"line":124,"column":89}},"69":{"start":{"line":125,"column":12},"end":{"line":125,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":30},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":36},"end":{"line":55,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":69},"end":{"line":13,"column":70}},"loc":{"start":{"line":13,"column":79},"end":{"line":26,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":17},"end":{"line":20,"column":18}},"loc":{"start":{"line":20,"column":31},"end":{"line":25,"column":9}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":54},"end":{"line":27,"column":55}},"loc":{"start":{"line":27,"column":64},"end":{"line":40,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":34,"column":17},"end":{"line":34,"column":18}},"loc":{"start":{"line":34,"column":31},"end":{"line":39,"column":9}},"line":34},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":54},"end":{"line":41,"column":55}},"loc":{"start":{"line":41,"column":64},"end":{"line":54,"column":5}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":48,"column":17},"end":{"line":48,"column":18}},"loc":{"start":{"line":48,"column":31},"end":{"line":53,"column":9}},"line":48},"8":{"name":"(anonymous_8)","decl":{"start":{"line":56,"column":26},"end":{"line":56,"column":27}},"loc":{"start":{"line":56,"column":32},"end":{"line":70,"column":1}},"line":56},"9":{"name":"(anonymous_9)","decl":{"start":{"line":57,"column":46},"end":{"line":57,"column":47}},"loc":{"start":{"line":57,"column":56},"end":{"line":69,"column":5}},"line":57},"10":{"name":"(anonymous_10)","decl":{"start":{"line":63,"column":17},"end":{"line":63,"column":18}},"loc":{"start":{"line":63,"column":31},"end":{"line":68,"column":9}},"line":63},"11":{"name":"(anonymous_11)","decl":{"start":{"line":71,"column":32},"end":{"line":71,"column":33}},"loc":{"start":{"line":71,"column":38},"end":{"line":98,"column":1}},"line":71},"12":{"name":"(anonymous_12)","decl":{"start":{"line":72,"column":41},"end":{"line":72,"column":42}},"loc":{"start":{"line":72,"column":51},"end":{"line":84,"column":5}},"line":72},"13":{"name":"(anonymous_13)","decl":{"start":{"line":78,"column":17},"end":{"line":78,"column":18}},"loc":{"start":{"line":78,"column":31},"end":{"line":83,"column":9}},"line":78},"14":{"name":"(anonymous_14)","decl":{"start":{"line":85,"column":34},"end":{"line":85,"column":35}},"loc":{"start":{"line":85,"column":44},"end":{"line":97,"column":5}},"line":85},"15":{"name":"(anonymous_15)","decl":{"start":{"line":91,"column":17},"end":{"line":91,"column":18}},"loc":{"start":{"line":91,"column":31},"end":{"line":96,"column":9}},"line":91},"16":{"name":"(anonymous_16)","decl":{"start":{"line":99,"column":30},"end":{"line":99,"column":31}},"loc":{"start":{"line":99,"column":36},"end":{"line":113,"column":1}},"line":99},"17":{"name":"(anonymous_17)","decl":{"start":{"line":100,"column":33},"end":{"line":100,"column":34}},"loc":{"start":{"line":100,"column":43},"end":{"line":112,"column":5}},"line":100},"18":{"name":"(anonymous_18)","decl":{"start":{"line":106,"column":17},"end":{"line":106,"column":18}},"loc":{"start":{"line":106,"column":31},"end":{"line":111,"column":9}},"line":106},"19":{"name":"(anonymous_19)","decl":{"start":{"line":114,"column":30},"end":{"line":114,"column":31}},"loc":{"start":{"line":114,"column":36},"end":{"line":128,"column":1}},"line":114},"20":{"name":"(anonymous_20)","decl":{"start":{"line":115,"column":33},"end":{"line":115,"column":34}},"loc":{"start":{"line":115,"column":43},"end":{"line":127,"column":5}},"line":115},"21":{"name":"(anonymous_21)","decl":{"start":{"line":121,"column":17},"end":{"line":121,"column":18}},"loc":{"start":{"line":121,"column":31},"end":{"line":126,"column":9}},"line":121}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":21,"column":12},"end":{"line":22,"column":33}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":22,"column":33}},{"start":{"line":21,"column":12},"end":{"line":22,"column":33}}],"line":21},"4":{"loc":{"start":{"line":35,"column":12},"end":{"line":36,"column":33}},"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":36,"column":33}},{"start":{"line":35,"column":12},"end":{"line":36,"column":33}}],"line":35},"5":{"loc":{"start":{"line":49,"column":12},"end":{"line":50,"column":33}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":50,"column":33}},{"start":{"line":49,"column":12},"end":{"line":50,"column":33}}],"line":49},"6":{"loc":{"start":{"line":64,"column":12},"end":{"line":65,"column":33}},"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":65,"column":33}},{"start":{"line":64,"column":12},"end":{"line":65,"column":33}}],"line":64},"7":{"loc":{"start":{"line":79,"column":12},"end":{"line":80,"column":33}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":80,"column":33}},{"start":{"line":79,"column":12},"end":{"line":80,"column":33}}],"line":79},"8":{"loc":{"start":{"line":92,"column":12},"end":{"line":93,"column":33}},"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":93,"column":33}},{"start":{"line":92,"column":12},"end":{"line":93,"column":33}}],"line":92},"9":{"loc":{"start":{"line":107,"column":12},"end":{"line":108,"column":33}},"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":108,"column":33}},{"start":{"line":107,"column":12},"end":{"line":108,"column":33}}],"line":107},"10":{"loc":{"start":{"line":122,"column":12},"end":{"line":123,"column":33}},"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":123,"column":33}},{"start":{"line":122,"column":12},"end":{"line":123,"column":33}}],"line":122}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":0,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":0,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":0,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":0,"68":1,"69":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"b":{"0":[1,1,1],"1":[1,3],"2":[4,4],"3":[0,1],"4":[0,1],"5":[0,1],"6":[0,1],"7":[0,1],"8":[0,1],"9":[0,1],"10":[0,1]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/modules/Todo/test/todo.spec.ts","sources":["D:/Desktop Files/Todo-Backend/src/modules/Todo/test/todo.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import app from \"../../../app\";\r\nimport request from \"supertest\";\r\nimport chai from \"chai\";\r\nimport sinon from \"sinon\";\r\nimport chaiHttp from \"chai-http\";\r\n\r\nchai.use(chaiHttp);\r\n\r\nconst expect = chai.expect;\r\n\r\ndescribe(\"Task Creation API\", () => {\r\n  it(\"should create a new task for a user with no existing tasks\", (done) => {\r\n    const requestBody = { taskName: \"New Task Name\" };\r\n    request(app)\r\n      .post(\"/api/tasks/createTask\")\r\n      .set(\r\n        \"Authorization\",\r\n        \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphZG9AZ21haWwuY29tIiwicGFzc3dvcmQiOiJNaW5lQDEyMyIsImlhdCI6MTcxMzUzNzQ0NCwiZXhwIjoxNzEzNTQxMDQ0fQ.IwXXL0WWqZid6YGvCJCSNzqs-wrWIY0zEGfJRWLs7TQ\"\r\n      )\r\n\r\n      .send(requestBody)\r\n      .expect(200)\r\n      .end((err, res) => {\r\n        if (err) return done(err);\r\n        expect(res.body).to.equal(\"Task is created\");\r\n        done();\r\n      });\r\n  });\r\n  it(\"should add task for user with existing task\", (done) => {\r\n    const requestBody = { taskName: \"Addiing Task Another Task\" };\r\n    request(app)\r\n      .post(\"/api/tasks/createTask\")\r\n      .set(\r\n        \"Authorization\",\r\n        \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphZG9AZ21haWwuY29tIiwicGFzc3dvcmQiOiJNaW5lQDEyMyIsImlhdCI6MTcxMzUzNzQ0NCwiZXhwIjoxNzEzNTQxMDQ0fQ.IwXXL0WWqZid6YGvCJCSNzqs-wrWIY0zEGfJRWLs7TQ\"\r\n      )\r\n\r\n      .send(requestBody)\r\n      .expect(200)\r\n      .end((err, res) => {\r\n        if (err) return done(err);\r\n        expect(res.body).to.equal(\"Task is Added\");\r\n        done();\r\n      });\r\n  });\r\n  it(\"should return conflict  for  existing tasks\", (done) => {\r\n    const requestBody = { taskName: \"New Task Name\" };\r\n    request(app)\r\n      .post(\"/api/tasks/createTask\")\r\n      .set(\r\n        \"Authorization\",\r\n        \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphZG9AZ21haWwuY29tIiwicGFzc3dvcmQiOiJNaW5lQDEyMyIsImlhdCI6MTcxMzUzNzQ0NCwiZXhwIjoxNzEzNTQxMDQ0fQ.IwXXL0WWqZid6YGvCJCSNzqs-wrWIY0zEGfJRWLs7TQ\"\r\n      )\r\n      .send(requestBody)\r\n      .expect(409)\r\n      .end((err, res) => {\r\n        if (err) return done(err);\r\n        expect(res.body).to.equal(\"The task already exists\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"View Task API\", () => {\r\n  it(\"should return All Tasks to the user\", (done) => {\r\n    const expectedTasks = [\"New Task Name\", \"Addiing Task Another Task\"];\r\n\r\n    request(app)\r\n      .get(\"/api/tasks/viewTasks\")\r\n      .set(\r\n        \"Authorization\",\r\n        \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphZG9AZ21haWwuY29tIiwicGFzc3dvcmQiOiJNaW5lQDEyMyIsImlhdCI6MTcxMzUzNzQ0NCwiZXhwIjoxNzEzNTQxMDQ0fQ.IwXXL0WWqZid6YGvCJCSNzqs-wrWIY0zEGfJRWLs7TQ\"\r\n      )\r\n\r\n      .expect(200)\r\n      .end((err, res) => {\r\n        if (err) return done(err);\r\n        expect(res.body).to.deep.equal(expectedTasks);\r\n        done();\r\n      });\r\n  });\r\n});\r\ndescribe(\"Search One Task API\", () => {\r\n  it(\"should return the seached task\", (done) => {\r\n    const taskName = \"Addiing Task Another Task\";\r\n\r\n    request(app)\r\n      .get(`/api/tasks/search/${taskName}`)\r\n      .set(\r\n        \"Authorization\",\r\n        \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphZG9AZ21haWwuY29tIiwicGFzc3dvcmQiOiJNaW5lQDEyMyIsImlhdCI6MTcxMzUzNzQ0NCwiZXhwIjoxNzEzNTQxMDQ0fQ.IwXXL0WWqZid6YGvCJCSNzqs-wrWIY0zEGfJRWLs7TQ\"\r\n      )\r\n\r\n      .expect(200)\r\n      .end((err, res) => {\r\n        if (err) return done(err);\r\n        expect(res.body).to.deep.equal(taskName);\r\n        done();\r\n      });\r\n  });\r\n  it(\"should return not Found\", (done) => {\r\n    const taskName = \"unknown Task\";\r\n\r\n    request(app)\r\n      .get(`/api/tasks/search/${taskName}`)\r\n      .set(\r\n        \"Authorization\",\r\n        \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphZG9AZ21haWwuY29tIiwicGFzc3dvcmQiOiJNaW5lQDEyMyIsImlhdCI6MTcxMzUzNzQ0NCwiZXhwIjoxNzEzNTQxMDQ0fQ.IwXXL0WWqZid6YGvCJCSNzqs-wrWIY0zEGfJRWLs7TQ\"\r\n      )\r\n\r\n      .expect(404)\r\n      .end((err, res) => {\r\n        if (err) return done(err);\r\n        expect(res.body).to.deep.equal(`${taskName} is not found in the task`);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"Updating Task API\", () => {\r\n  it(\"should update The Task\", (done) => {\r\n    const taskName = \"New Task Name\";\r\n\r\n    request(app)\r\n      .put(`/api/tasks/update/${taskName}`)\r\n      .set(\r\n        \"Authorization\",\r\n        \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphZG9AZ21haWwuY29tIiwicGFzc3dvcmQiOiJNaW5lQDEyMyIsImlhdCI6MTcxMzUzNzQ0NCwiZXhwIjoxNzEzNTQxMDQ0fQ.IwXXL0WWqZid6YGvCJCSNzqs-wrWIY0zEGfJRWLs7TQ\"\r\n      )\r\n\r\n      .expect(200)\r\n      .end((err, res) => {\r\n        if (err) return done(err);\r\n        expect(res.body).to.deep.equal(\r\n          `Task '${taskName}' is updated successfully`\r\n        );\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"Deleting Task API\", () => {\r\n  it(\"should delete the task\", (done) => {\r\n    const taskName = \"New Task Name\";\r\n\r\n    request(app)\r\n      .delete(`/api/tasks/delete/${taskName}`)\r\n      .set(\r\n        \"Authorization\",\r\n        \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImphZG9AZ21haWwuY29tIiwicGFzc3dvcmQiOiJNaW5lQDEyMyIsImlhdCI6MTcxMzUzNzQ0NCwiZXhwIjoxNzEzNTQxMDQ0fQ.IwXXL0WWqZid6YGvCJCSNzqs-wrWIY0zEGfJRWLs7TQ\"\r\n      )\r\n\r\n      .expect(200)\r\n      .end((err, res) => {\r\n        if (err) return done(err);\r\n        expect(res.body).to.deep.equal(\r\n          `Task '${taskName}'is deleted successfully'`\r\n        );\r\n        done();\r\n      });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bd4281918618800ff0da7c1bd134a68e297c370b"},"D:\\Desktop Files\\Todo-Backend\\src\\app.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\app.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":53}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":47}},"7":{"start":{"line":10,"column":13},"end":{"line":10,"column":17}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":36}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":31}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":67}},"13":{"start":{"line":15,"column":23},"end":{"line":15,"column":65}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":17},"end":{"line":15,"column":18}},"loc":{"start":{"line":15,"column":23},"end":{"line":15,"column":65}},"line":15}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":3,"1":1},"b":{"0":[1,1,1],"1":[1,2],"2":[3,3]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/app.ts","sources":["D:/Desktop Files/Todo-Backend/src/app.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,wCAAsC;AACtC,sDAA2C;AAC3C,gDAAwB;AAExB,MAAM,IAAI,GAAW,IAAI,CAAC;AAC1B,MAAM,GAAG,GAAY,IAAA,iBAAO,GAAE,CAAC;AAE/B,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,gBAAM,CAAC,CAAC;AACxB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,IAAI,EAAE,CAAC,CAAC,CAAC;AAEnE,kBAAe,GAAG,CAAC","sourcesContent":["import routes from \"./routes\";\r\nimport \"./database/config/connection\";\r\nimport express, { Express } from \"express\";\r\nimport cors from \"cors\";\r\n\r\nconst PORT: Number = 3000;\r\nconst app: Express = express();\r\n\r\napp.use(express.json());\r\napp.use(cors());\r\napp.use(\"/api\", routes);\r\napp.listen(PORT, () => console.log(`Server listening at ${PORT}`));\r\n\r\nexport default app;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1264e60a9921113eba0a262d1aeb1a198521d48a"},"D:\\Desktop Files\\Todo-Backend\\src\\routes\\index.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\routes\\index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":61}},"6":{"start":{"line":9,"column":22},"end":{"line":9,"column":57}},"7":{"start":{"line":10,"column":21},"end":{"line":10,"column":61}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"9":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":72}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":3},"b":{"0":[1,1,1],"1":[2,1],"2":[3,3]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/routes/index.ts","sources":["D:/Desktop Files/Todo-Backend/src/routes/index.ts"],"names":[],"mappings":";;;;;AAAA,sDAA6B;AAC7B,gEAAwC;AACxC,8DAAsC;AACtC,0DAAyD;AACzD,8DAA2D;AAE3D,IAAA,uBAAU,GAAE,CAAC;AACb,MAAM,MAAM,GAAG,IAAA,iBAAM,GAAE,CAAC;AACxB,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,qBAAW,CAAC,CAAC;AAClC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,2BAAa,EAAE,oBAAU,CAAC,CAAC;AAEhD,kBAAe,MAAM,CAAC","sourcesContent":["import Router from \"express\";\r\nimport usersRouter from \"./usersRouter\";\r\nimport taskRouter from \"./todoRoutes\";\r\nimport { validateToken } from \"../utilities/tokenVerify\";\r\nimport { connection } from \"../database/config/connection\";\r\n\r\nconnection();\r\nconst router = Router();\r\nrouter.use(\"/users\", usersRouter);\r\nrouter.use(\"/tasks\", validateToken, taskRouter);\r\n\r\nexport default router;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f35fc3f987c8ddf1bf34604dbacd1238bb892c11"},"D:\\Desktop Files\\Todo-Backend\\src\\routes\\usersRouter.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\routes\\usersRouter.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":26},"end":{"line":7,"column":81}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":44}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":64}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":52}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/routes/usersRouter.ts","sources":["D:/Desktop Files/Todo-Backend/src/routes/usersRouter.ts"],"names":[],"mappings":";;;;;AAAA,sDAA6B;AAC7B,kFAGsD;AAEtD,MAAM,WAAW,GAAG,IAAA,iBAAM,GAAE,CAAC;AAC7B,WAAW,CAAC,IAAI,CAAC,eAAe,EAAE,4BAAU,CAAC,CAAC;AAC9C,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,uBAAK,CAAC,CAAC;AAElC,kBAAe,WAAW,CAAC","sourcesContent":["import Router from \"express\";\r\nimport {\r\n  createUser,\r\n  login,\r\n} from \"../modules/users/controllers/userControllers\";\r\n\r\nconst usersRouter = Router();\r\nusersRouter.post(\"/registration\", createUser);\r\nusersRouter.post(\"/login\", login);\r\n\r\nexport default usersRouter;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f01b26cc93d9d00465d753e3d02ca465326098af"},"D:\\Desktop Files\\Todo-Backend\\src\\modules\\users\\controllers\\userControllers.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\modules\\users\\controllers\\userControllers.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"16":{"start":{"line":16,"column":25},"end":{"line":16,"column":64}},"17":{"start":{"line":17,"column":16},"end":{"line":17,"column":68}},"18":{"start":{"line":18,"column":17},"end":{"line":18,"column":51}},"19":{"start":{"line":19,"column":17},"end":{"line":19,"column":51}},"20":{"start":{"line":20,"column":23},"end":{"line":20,"column":63}},"21":{"start":{"line":21,"column":21},"end":{"line":21,"column":39}},"22":{"start":{"line":22,"column":19},"end":{"line":40,"column":2}},"23":{"start":{"line":22,"column":33},"end":{"line":40,"column":2}},"24":{"start":{"line":23,"column":4},"end":{"line":39,"column":5}},"25":{"start":{"line":24,"column":45},"end":{"line":24,"column":53}},"26":{"start":{"line":25,"column":26},"end":{"line":25,"column":80}},"27":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"28":{"start":{"line":27,"column":12},"end":{"line":27,"column":66}},"29":{"start":{"line":29,"column":20},"end":{"line":29,"column":66}},"30":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"31":{"start":{"line":31,"column":12},"end":{"line":31,"column":56}},"32":{"start":{"line":33,"column":25},"end":{"line":33,"column":66}},"33":{"start":{"line":34,"column":21},"end":{"line":34,"column":82}},"34":{"start":{"line":35,"column":8},"end":{"line":35,"column":58}},"35":{"start":{"line":38,"column":8},"end":{"line":38,"column":83}},"36":{"start":{"line":41,"column":0},"end":{"line":41,"column":32}},"37":{"start":{"line":42,"column":14},"end":{"line":67,"column":2}},"38":{"start":{"line":42,"column":28},"end":{"line":67,"column":2}},"39":{"start":{"line":43,"column":4},"end":{"line":66,"column":5}},"40":{"start":{"line":44,"column":36},"end":{"line":44,"column":44}},"41":{"start":{"line":45,"column":26},"end":{"line":45,"column":72}},"42":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"43":{"start":{"line":47,"column":12},"end":{"line":47,"column":74}},"44":{"start":{"line":49,"column":8},"end":{"line":62,"column":9}},"45":{"start":{"line":50,"column":36},"end":{"line":50,"column":54}},"46":{"start":{"line":51,"column":12},"end":{"line":61,"column":15}},"47":{"start":{"line":52,"column":16},"end":{"line":60,"column":17}},"48":{"start":{"line":53,"column":34},"end":{"line":55,"column":22}},"49":{"start":{"line":56,"column":20},"end":{"line":56,"column":55}},"50":{"start":{"line":59,"column":20},"end":{"line":59,"column":82}},"51":{"start":{"line":65,"column":8},"end":{"line":65,"column":72}},"52":{"start":{"line":68,"column":0},"end":{"line":68,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":22,"column":19},"end":{"line":22,"column":20}},"loc":{"start":{"line":22,"column":33},"end":{"line":40,"column":2}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":67},"end":{"line":22,"column":68}},"loc":{"start":{"line":22,"column":80},"end":{"line":40,"column":1}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":42,"column":14},"end":{"line":42,"column":15}},"loc":{"start":{"line":42,"column":28},"end":{"line":67,"column":2}},"line":42},"11":{"name":"(anonymous_11)","decl":{"start":{"line":42,"column":62},"end":{"line":42,"column":63}},"loc":{"start":{"line":42,"column":75},"end":{"line":67,"column":1}},"line":42},"12":{"name":"(anonymous_12)","decl":{"start":{"line":51,"column":64},"end":{"line":51,"column":65}},"loc":{"start":{"line":51,"column":82},"end":{"line":61,"column":13}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"9":{"loc":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},{"start":{"line":30,"column":8},"end":{"line":32,"column":9}}],"line":30},"10":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{"line":46,"column":8},"end":{"line":48,"column":9}}],"line":46},"11":{"loc":{"start":{"line":49,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":62,"column":9}},{"start":{"line":49,"column":8},"end":{"line":62,"column":9}}],"line":49},"12":{"loc":{"start":{"line":52,"column":16},"end":{"line":60,"column":17}},"type":"if","locations":[{"start":{"line":52,"column":16},"end":{"line":60,"column":17}},{"start":{"line":52,"column":16},"end":{"line":60,"column":17}}],"line":52}},"s":{"0":1,"1":7,"2":0,"3":9,"4":7,"5":7,"6":0,"7":0,"8":0,"9":0,"10":16,"11":9,"12":1,"13":4,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":6,"24":6,"25":6,"26":6,"27":6,"28":4,"29":2,"30":2,"31":1,"32":1,"33":1,"34":1,"35":0,"36":1,"37":1,"38":3,"39":3,"40":3,"41":3,"42":3,"43":1,"44":2,"45":2,"46":2,"47":2,"48":1,"49":1,"50":1,"51":0,"52":1},"f":{"0":9,"1":7,"2":0,"3":9,"4":7,"5":0,"6":16,"7":4,"8":6,"9":6,"10":3,"11":3,"12":2},"b":{"0":[1,1,1],"1":[7,0],"2":[9,9],"3":[9,7],"4":[9,9],"5":[1,1,1],"6":[1,3],"7":[4,4],"8":[4,2],"9":[1,1],"10":[1,2],"11":[2,0],"12":[1,1]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/modules/users/controllers/userControllers.ts","sources":["D:/Desktop Files/Todo-Backend/src/modules/users/controllers/userControllers.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { insertIntoDb, exstingUser } from \"../repository/userRepository\";\r\nimport userValidation from \"../../../utilities/input\";\r\nimport bcrypt from \"bcrypt\";\r\n\r\nimport bycrpt, { hash } from \"bcrypt\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nconst TOKEN_SECRET = \"NeverTrustPeople\";\r\n\r\nconst createUser = async (req: Request, res: Response) => {\r\n  try {\r\n    const { email, password, confirm } = req.body;\r\n    const { error } = userValidation.validate({ email, password, confirm });\r\n    if (error) {\r\n      return res.status(400).json((error.details[0] as any).message);\r\n    }\r\n    const one = await exstingUser(email);\r\n    if (one) {\r\n      return res.status(409).json(\"Email in use\");\r\n    }\r\n    const Password = await bcrypt.hash(password, 10);\r\n    const data = await insertIntoDb({ email, Password });\r\n    return res.status(200).json(\"Account Is Created\");\r\n  } catch (error) {\r\n    return res.status(500).json({ status: 500, error: JSON.stringify(error) });\r\n  }\r\n};\r\n\r\nconst login = async (req: Request, res: Response) => {\r\n  try {\r\n    const { email, password } = req.body;\r\n    const fetchUser = await exstingUser(email);\r\n    if (!fetchUser) {\r\n      return res.status(400).json(\"Email or Password is incorrect\");\r\n    }\r\n    if (fetchUser) {\r\n      const fetchedPassword = fetchUser.Password;\r\n      bycrpt.compare(password, fetchedPassword, (err, results) => {\r\n        if (results) {\r\n          const token = jwt.sign({ email, password }, TOKEN_SECRET, {\r\n            expiresIn: 60 * 60,\r\n          });\r\n          return res.status(200).json(token);\r\n        } else {\r\n          return res.status(400).json(\"Email or Password is incorrect\");\r\n        }\r\n      });\r\n    }\r\n  } catch (error) {\r\n    return res.status(500).json({ error: \"Internal Server Error\" });\r\n  }\r\n};\r\nexport { createUser, login };\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"115b865cb264aa5bd13594aeadde35f0a0a6d84c"},"D:\\Desktop Files\\Todo-Backend\\src\\modules\\users\\repository\\userRepository.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\modules\\users\\repository\\userRepository.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"14":{"start":{"line":13,"column":22},"end":{"line":13,"column":69}},"15":{"start":{"line":14,"column":21},"end":{"line":16,"column":2}},"16":{"start":{"line":14,"column":31},"end":{"line":16,"column":2}},"17":{"start":{"line":15,"column":4},"end":{"line":15,"column":55}},"18":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"19":{"start":{"line":18,"column":20},"end":{"line":20,"column":2}},"20":{"start":{"line":18,"column":31},"end":{"line":20,"column":2}},"21":{"start":{"line":19,"column":4},"end":{"line":19,"column":61}},"22":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"loc":{"start":{"line":14,"column":31},"end":{"line":16,"column":2}},"line":14},"8":{"name":"(anonymous_8)","decl":{"start":{"line":14,"column":65},"end":{"line":14,"column":66}},"loc":{"start":{"line":14,"column":78},"end":{"line":16,"column":1}},"line":14},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":20},"end":{"line":18,"column":21}},"loc":{"start":{"line":18,"column":31},"end":{"line":20,"column":2}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":18,"column":65},"end":{"line":18,"column":66}},"loc":{"start":{"line":18,"column":78},"end":{"line":20,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":6,"2":5,"3":6,"4":6,"5":6,"6":0,"7":0,"8":0,"9":0,"10":12,"11":6,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":5,"21":5,"22":1},"f":{"0":6,"1":6,"2":5,"3":6,"4":6,"5":0,"6":12,"7":1,"8":1,"9":5,"10":5},"b":{"0":[1,1,1],"1":[1,5],"2":[6,6],"3":[6,6],"4":[6,6]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/modules/users/repository/userRepository.ts","sources":["D:/Desktop Files/Todo-Backend/src/modules/users/repository/userRepository.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,sEAAkE;AAElE,MAAM,YAAY,GAAG,CAAO,IAAS,EAAE,EAAE;IACvC,OAAO,MAAM,wBAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvC,CAAC,CAAA,CAAC;AAMO,oCAAY;AAJrB,MAAM,WAAW,GAAG,CAAO,KAAa,EAAE,EAAE;IAC1C,OAAO,MAAM,wBAAU,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7C,CAAC,CAAA,CAAC;AAEqB,kCAAW","sourcesContent":["import { usersModel } from \"../../../database/models/usersSchema\";\r\n\r\nconst insertIntoDb = async (body: any) => {\r\n  return await usersModel.create(body);\r\n};\r\n\r\nconst exstingUser = async (email: string) => {\r\n  return await usersModel.findOne({ email });\r\n};\r\n\r\nexport { insertIntoDb, exstingUser };\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6376932cc00c588156e3491f9e6ba009361e5f46"},"D:\\Desktop Files\\Todo-Backend\\src\\utilities\\input.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\utilities\\input.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":14},"end":{"line":6,"column":45}},"4":{"start":{"line":7,"column":23},"end":{"line":30,"column":2}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/utilities/input.ts","sources":["D:/Desktop Files/Todo-Backend/src/utilities/input.ts"],"names":[],"mappings":";;;;;AAAA,8CAAsB;AAEtB,MAAM,cAAc,GAAG,aAAG,CAAC,MAAM,CAAC;IAChC,KAAK,EAAE,aAAG,CAAC,MAAM,EAAE;SAChB,KAAK,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,6CAA6C;SAC/E,QAAQ,EAAE;SACV,QAAQ,CAAC;QACR,aAAa,EAAE,8BAA8B;QAC7C,cAAc,EAAE,uBAAuB;QACvC,cAAc,EAAE,qCAAqC;QACrD,cAAc,EAAE,mBAAmB;KACpC,CAAC;IACJ,QAAQ,EAAE,aAAG,CAAC,MAAM,EAAE;SACnB,OAAO,CACN,IAAI,MAAM,CACR,wFAAwF,CACzF,CACF;SACA,QAAQ,EAAE;SACV,QAAQ,CAAC;QACR,aAAa,EAAE,iCAAiC;QAChD,cAAc,EAAE,0BAA0B;QAC1C,qBAAqB,EACnB,8JAA8J;QAChK,cAAc,EAAE,sBAAsB;KACvC,CAAC;IACJ,OAAO,EAAE,aAAG,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,aAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;QACnE,UAAU,EAAE,wBAAwB;QACpC,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH,CAAC,CAAC;AAEH,kBAAe,cAAc,CAAC","sourcesContent":["import Joi from \"joi\";\r\n\r\nconst userValidation = Joi.object({\r\n  email: Joi.string()\r\n    .email({ tlds: { allow: false } }) // Disallow top-level domains for flexibility\r\n    .required()\r\n    .messages({\r\n      \"string.base\": \"Email must be a valid string\",\r\n      \"string.empty\": \"Email cannot be empty\",\r\n      \"string.email\": \"Email must be a valid email address\",\r\n      \"any.required\": \"Email is required\",\r\n    }),\r\n  password: Joi.string()\r\n    .pattern(\r\n      new RegExp(\r\n        \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[!@#$%^&*()_+\\\\-=\\\\[\\\\]{};:'\\\"|,.<>\\\\/?]).{8,30}$\"\r\n      )\r\n    )\r\n    .required()\r\n    .messages({\r\n      \"string.base\": \"Password must be a valid string\",\r\n      \"string.empty\": \"Password cannot be empty\",\r\n      \"string.pattern.base\":\r\n        \"Password must contain at least one lowercase letter, one uppercase letter, one numeric digit, one special character, and be between 8 and 30 characters long\",\r\n      \"any.required\": \"Password is required\",\r\n    }),\r\n  confirm: Joi.string().valid(Joi.ref(\"password\")).required().messages({\r\n    \"any.only\": \"Passwords do not match\",\r\n    \"any.required\": \"confirm Password\",\r\n  }),\r\n});\r\n\r\nexport default userValidation;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2f97acc7df2ff14b96bee736574a25c4f9fc2e2c"},"D:\\Desktop Files\\Todo-Backend\\src\\routes\\todoRoutes.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\routes\\todoRoutes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":80}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":61}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":57}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":71}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":68}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":66}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/routes/todoRoutes.ts","sources":["D:/Desktop Files/Todo-Backend/src/routes/todoRoutes.ts"],"names":[],"mappings":";;AAAA,qCAAoD;AACpD,iFAMqD;AAErD,MAAM,UAAU,GAAG,IAAA,gBAAM,GAAE,CAAC;AAC5B,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,4BAAU,CAAC,CAAC;AAC3C,UAAU,CAAC,GAAG,CAAC,YAAY,EAAE,0BAAQ,CAAC,CAAC;AACvC,UAAU,CAAC,MAAM,CAAC,mBAAmB,EAAE,8BAAY,CAAC,CAAC;AACrD,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,8BAAY,CAAC,CAAC;AAClD,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,4BAAU,CAAC,CAAC;AAChD,kBAAe,UAAU,CAAC","sourcesContent":["import { Router, Request, Response } from \"express\";\r\nimport {\r\n  createTask,\r\n  viewTask,\r\n  deletingTask,\r\n  updatingTask,\r\n  searchTask,\r\n} from \"../modules/Todo/controllers/todoControllers\";\r\n\r\nconst taskRouter = Router();\r\ntaskRouter.post(\"/createTask\", createTask);\r\ntaskRouter.get(\"/viewTasks\", viewTask);\r\ntaskRouter.delete(\"/delete/:taskName\", deletingTask);\r\ntaskRouter.put(\"/update/:taskName\", updatingTask);\r\ntaskRouter.get(\"/search/:taskName\", searchTask);\r\nexport default taskRouter;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c6ee763e12933a2aa577b3e23d7b20d513c66993"},"D:\\Desktop Files\\Todo-Backend\\src\\modules\\Todo\\controllers\\todoControllers.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\modules\\Todo\\controllers\\todoControllers.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":114}},"14":{"start":{"line":13,"column":25},"end":{"line":13,"column":64}},"15":{"start":{"line":14,"column":19},"end":{"line":36,"column":2}},"16":{"start":{"line":14,"column":33},"end":{"line":36,"column":2}},"17":{"start":{"line":15,"column":4},"end":{"line":35,"column":5}},"18":{"start":{"line":16,"column":22},"end":{"line":16,"column":30}},"19":{"start":{"line":17,"column":29},"end":{"line":17,"column":37}},"20":{"start":{"line":18,"column":29},"end":{"line":18,"column":81}},"21":{"start":{"line":19,"column":21},"end":{"line":19,"column":80}},"22":{"start":{"line":20,"column":8},"end":{"line":30,"column":9}},"23":{"start":{"line":21,"column":12},"end":{"line":21,"column":67}},"24":{"start":{"line":23,"column":13},"end":{"line":30,"column":9}},"25":{"start":{"line":24,"column":27},"end":{"line":24,"column":83}},"26":{"start":{"line":25,"column":12},"end":{"line":25,"column":57}},"27":{"start":{"line":28,"column":33},"end":{"line":28,"column":82}},"28":{"start":{"line":29,"column":12},"end":{"line":29,"column":59}},"29":{"start":{"line":33,"column":8},"end":{"line":33,"column":53}},"30":{"start":{"line":34,"column":8},"end":{"line":34,"column":61}},"31":{"start":{"line":37,"column":0},"end":{"line":37,"column":32}},"32":{"start":{"line":38,"column":17},"end":{"line":48,"column":2}},"33":{"start":{"line":38,"column":31},"end":{"line":48,"column":2}},"34":{"start":{"line":39,"column":4},"end":{"line":47,"column":5}},"35":{"start":{"line":40,"column":22},"end":{"line":40,"column":30}},"36":{"start":{"line":41,"column":22},"end":{"line":41,"column":68}},"37":{"start":{"line":42,"column":8},"end":{"line":42,"column":55}},"38":{"start":{"line":45,"column":8},"end":{"line":45,"column":53}},"39":{"start":{"line":46,"column":8},"end":{"line":46,"column":61}},"40":{"start":{"line":49,"column":0},"end":{"line":49,"column":28}},"41":{"start":{"line":50,"column":21},"end":{"line":63,"column":2}},"42":{"start":{"line":50,"column":35},"end":{"line":63,"column":2}},"43":{"start":{"line":51,"column":25},"end":{"line":51,"column":35}},"44":{"start":{"line":52,"column":18},"end":{"line":52,"column":26}},"45":{"start":{"line":53,"column":4},"end":{"line":62,"column":5}},"46":{"start":{"line":54,"column":23},"end":{"line":54,"column":78}},"47":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"48":{"start":{"line":56,"column":12},"end":{"line":56,"column":58}},"49":{"start":{"line":58,"column":8},"end":{"line":58,"column":82}},"50":{"start":{"line":61,"column":8},"end":{"line":61,"column":49}},"51":{"start":{"line":64,"column":0},"end":{"line":64,"column":36}},"52":{"start":{"line":65,"column":21},"end":{"line":80,"column":2}},"53":{"start":{"line":65,"column":35},"end":{"line":80,"column":2}},"54":{"start":{"line":66,"column":4},"end":{"line":79,"column":5}},"55":{"start":{"line":67,"column":29},"end":{"line":67,"column":39}},"56":{"start":{"line":68,"column":36},"end":{"line":68,"column":44}},"57":{"start":{"line":69,"column":22},"end":{"line":69,"column":30}},"58":{"start":{"line":70,"column":23},"end":{"line":70,"column":95}},"59":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"60":{"start":{"line":72,"column":12},"end":{"line":72,"column":73}},"61":{"start":{"line":74,"column":8},"end":{"line":74,"column":82}},"62":{"start":{"line":77,"column":8},"end":{"line":77,"column":53}},"63":{"start":{"line":78,"column":8},"end":{"line":78,"column":65}},"64":{"start":{"line":81,"column":0},"end":{"line":81,"column":36}},"65":{"start":{"line":82,"column":19},"end":{"line":100,"column":2}},"66":{"start":{"line":82,"column":33},"end":{"line":100,"column":2}},"67":{"start":{"line":83,"column":4},"end":{"line":99,"column":5}},"68":{"start":{"line":84,"column":22},"end":{"line":84,"column":30}},"69":{"start":{"line":85,"column":29},"end":{"line":85,"column":39}},"70":{"start":{"line":86,"column":21},"end":{"line":86,"column":80}},"71":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"72":{"start":{"line":88,"column":12},"end":{"line":88,"column":80}},"73":{"start":{"line":90,"column":29},"end":{"line":90,"column":82}},"74":{"start":{"line":90,"column":61},"end":{"line":90,"column":81}},"75":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"76":{"start":{"line":92,"column":12},"end":{"line":92,"column":83}},"77":{"start":{"line":94,"column":8},"end":{"line":94,"column":43}},"78":{"start":{"line":97,"column":8},"end":{"line":97,"column":54}},"79":{"start":{"line":98,"column":8},"end":{"line":98,"column":65}},"80":{"start":{"line":101,"column":0},"end":{"line":101,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":19},"end":{"line":14,"column":20}},"loc":{"start":{"line":14,"column":33},"end":{"line":36,"column":2}},"line":14},"8":{"name":"(anonymous_8)","decl":{"start":{"line":14,"column":67},"end":{"line":14,"column":68}},"loc":{"start":{"line":14,"column":80},"end":{"line":36,"column":1}},"line":14},"9":{"name":"(anonymous_9)","decl":{"start":{"line":38,"column":17},"end":{"line":38,"column":18}},"loc":{"start":{"line":38,"column":31},"end":{"line":48,"column":2}},"line":38},"10":{"name":"(anonymous_10)","decl":{"start":{"line":38,"column":65},"end":{"line":38,"column":66}},"loc":{"start":{"line":38,"column":78},"end":{"line":48,"column":1}},"line":38},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":21},"end":{"line":50,"column":22}},"loc":{"start":{"line":50,"column":35},"end":{"line":63,"column":2}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":50,"column":69},"end":{"line":50,"column":70}},"loc":{"start":{"line":50,"column":82},"end":{"line":63,"column":1}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":65,"column":21},"end":{"line":65,"column":22}},"loc":{"start":{"line":65,"column":35},"end":{"line":80,"column":2}},"line":65},"14":{"name":"(anonymous_14)","decl":{"start":{"line":65,"column":69},"end":{"line":65,"column":70}},"loc":{"start":{"line":65,"column":82},"end":{"line":80,"column":1}},"line":65},"15":{"name":"(anonymous_15)","decl":{"start":{"line":82,"column":19},"end":{"line":82,"column":20}},"loc":{"start":{"line":82,"column":33},"end":{"line":100,"column":2}},"line":82},"16":{"name":"(anonymous_16)","decl":{"start":{"line":82,"column":67},"end":{"line":82,"column":68}},"loc":{"start":{"line":82,"column":80},"end":{"line":100,"column":1}},"line":82},"17":{"name":"(anonymous_17)","decl":{"start":{"line":90,"column":48},"end":{"line":90,"column":49}},"loc":{"start":{"line":90,"column":61},"end":{"line":90,"column":81}},"line":90}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":20,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":30,"column":9}},{"start":{"line":20,"column":8},"end":{"line":30,"column":9}}],"line":20},"6":{"loc":{"start":{"line":23,"column":13},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":13},"end":{"line":30,"column":9}},{"start":{"line":23,"column":13},"end":{"line":30,"column":9}}],"line":23},"7":{"loc":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},{"start":{"line":55,"column":8},"end":{"line":57,"column":9}}],"line":55},"8":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{"line":71,"column":8},"end":{"line":73,"column":9}}],"line":71},"9":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87},"10":{"loc":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},{"start":{"line":91,"column":8},"end":{"line":93,"column":9}}],"line":91}},"s":{"0":1,"1":12,"2":0,"3":8,"4":12,"5":12,"6":0,"7":0,"8":0,"9":0,"10":20,"11":8,"12":1,"13":1,"14":1,"15":1,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":3,"23":1,"24":2,"25":1,"26":1,"27":1,"28":1,"29":0,"30":0,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":0,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":0,"49":1,"50":0,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":0,"61":1,"62":0,"63":0,"64":1,"65":1,"66":2,"67":2,"68":2,"69":2,"70":2,"71":2,"72":1,"73":1,"74":2,"75":1,"76":0,"77":1,"78":0,"79":0,"80":1},"f":{"0":8,"1":12,"2":0,"3":8,"4":12,"5":0,"6":20,"7":3,"8":3,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2},"b":{"0":[1,1,1],"1":[12,0],"2":[8,8],"3":[8,12],"4":[8,8],"5":[1,2],"6":[1,1],"7":[0,1],"8":[0,1],"9":[1,1],"10":[0,1]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/modules/Todo/controllers/todoControllers.ts","sources":["D:/Desktop Files/Todo-Backend/src/modules/Todo/controllers/todoControllers.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport userValidation from \"../../../utilities/input\";\r\nimport {\r\n  fetchExistingTask,\r\n  emailBasedTask,\r\n  addingTask,\r\n  pushingTask,\r\n  viewAllTask,\r\n  deleteTask,\r\n  updateTask,\r\n  findSingleTask,\r\n} from \"../repository/todoRepository\";\r\nconst createTask = async (req: Request, res: Response) => {\r\n  try {\r\n    const email: any = req.user;\r\n    const { taskName } = req.body;\r\n    const existingTask = await fetchExistingTask(email);\r\n    const task = await emailBasedTask(email, taskName);\r\n    if (task) {\r\n      return res.status(409).json(\"The task already exists\");\r\n    } else if (existingTask) {\r\n      const update = await pushingTask(email, taskName);\r\n      return res.status(200).json(\"Task is Added\");\r\n    } else {\r\n      const creatingTask = addingTask(email, taskName);\r\n      return res.status(200).json(\"Task is created\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error creating task:\", error);\r\n    return res.status(500).send(\"Internal server error\");\r\n  }\r\n};\r\nconst viewTask = async (req: Request, res: Response) => {\r\n  try {\r\n    const email: any = req.user;\r\n    const tasks = await viewAllTask(email);\r\n    return res.status(200).json(tasks[0].taskName);\r\n  } catch (error) {\r\n    console.error(\"Error creating task:\", error);\r\n    return res.status(500).send(\"Internal server error\");\r\n  }\r\n};\r\nconst deletingTask = async (req: Request, res: Response) => {\r\n  const { taskName } = req.params;\r\n  const email = req.user;\r\n  try {\r\n    const result = await deleteTask(email, taskName);\r\n    if (!result) {\r\n      return res.status(404).json(\"Task not found\");\r\n    }\r\n    return res.status(200).json(`Task '${taskName}'is deleted successfully'`);\r\n  } catch (error) {\r\n    throw new Error(\"Failed to delete task\");\r\n  }\r\n};\r\nconst updatingTask = async (req: Request, res: Response) => {\r\n  try {\r\n    const { taskName } = req.params;\r\n    const { updatedTaskName } = req.body;\r\n    const email = req.user;\r\n\r\n    const result = await updateTask(email, taskName, updatedTaskName);\r\n    if (!result) {\r\n      return res.status(404).json(\"Task not found or not updated\");\r\n    }\r\n\r\n    return res.status(200).json(`Task '${taskName}' is updated successfully`);\r\n  } catch (error) {\r\n    console.error(\"Error updating task:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nconst searchTask = async (req: Request, res: Response) => {\r\n  try {\r\n    const email = req.user;\r\n    const { taskName } = req.params;\r\n\r\n    const task = await findSingleTask(email, taskName);\r\n\r\n    if (!task) {\r\n      return res.status(404).json(`${taskName} is not found in the task`);\r\n    }\r\n    const selectedTask = task.taskName.find((Element) => Element === taskName);\r\n\r\n    if (!selectedTask) {\r\n      return res.status(404).json(`${taskName} value not found in the task`);\r\n    }\r\n\r\n    res.status(200).json(selectedTask);\r\n  } catch (error) {\r\n    console.error(\"Error searching task:\", error);\r\n    res.status(500).json({ error: \"Internal server error\" });\r\n  }\r\n};\r\n\r\nexport { createTask, viewTask, deletingTask, updatingTask, searchTask };\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a1050cb1e8540536f2f59d5a669d5bf3bd3b70b0"},"D:\\Desktop Files\\Todo-Backend\\src\\modules\\Todo\\repository\\todoRepository.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\modules\\Todo\\repository\\todoRepository.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":192}},"14":{"start":{"line":13,"column":20},"end":{"line":13,"column":65}},"15":{"start":{"line":14,"column":26},"end":{"line":16,"column":2}},"16":{"start":{"line":14,"column":37},"end":{"line":16,"column":2}},"17":{"start":{"line":15,"column":4},"end":{"line":15,"column":59}},"18":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}},"19":{"start":{"line":18,"column":23},"end":{"line":20,"column":2}},"20":{"start":{"line":18,"column":44},"end":{"line":20,"column":2}},"21":{"start":{"line":19,"column":4},"end":{"line":19,"column":90}},"22":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"23":{"start":{"line":22,"column":20},"end":{"line":24,"column":2}},"24":{"start":{"line":22,"column":41},"end":{"line":24,"column":2}},"25":{"start":{"line":23,"column":4},"end":{"line":23,"column":96}},"26":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"27":{"start":{"line":26,"column":19},"end":{"line":28,"column":2}},"28":{"start":{"line":26,"column":40},"end":{"line":28,"column":2}},"29":{"start":{"line":27,"column":4},"end":{"line":27,"column":68}},"30":{"start":{"line":29,"column":0},"end":{"line":29,"column":32}},"31":{"start":{"line":30,"column":20},"end":{"line":32,"column":2}},"32":{"start":{"line":30,"column":31},"end":{"line":32,"column":2}},"33":{"start":{"line":31,"column":4},"end":{"line":31,"column":56}},"34":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"35":{"start":{"line":34,"column":19},"end":{"line":36,"column":2}},"36":{"start":{"line":34,"column":40},"end":{"line":36,"column":2}},"37":{"start":{"line":35,"column":4},"end":{"line":35,"column":118}},"38":{"start":{"line":37,"column":0},"end":{"line":37,"column":32}},"39":{"start":{"line":38,"column":19},"end":{"line":40,"column":2}},"40":{"start":{"line":38,"column":57},"end":{"line":40,"column":2}},"41":{"start":{"line":39,"column":4},"end":{"line":39,"column":148}},"42":{"start":{"line":41,"column":0},"end":{"line":41,"column":32}},"43":{"start":{"line":42,"column":23},"end":{"line":44,"column":2}},"44":{"start":{"line":42,"column":44},"end":{"line":44,"column":2}},"45":{"start":{"line":43,"column":4},"end":{"line":43,"column":90}},"46":{"start":{"line":45,"column":0},"end":{"line":45,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":26},"end":{"line":14,"column":27}},"loc":{"start":{"line":14,"column":37},"end":{"line":16,"column":2}},"line":14},"8":{"name":"(anonymous_8)","decl":{"start":{"line":14,"column":71},"end":{"line":14,"column":72}},"loc":{"start":{"line":14,"column":84},"end":{"line":16,"column":1}},"line":14},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":23},"end":{"line":18,"column":24}},"loc":{"start":{"line":18,"column":44},"end":{"line":20,"column":2}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":18,"column":78},"end":{"line":18,"column":79}},"loc":{"start":{"line":18,"column":91},"end":{"line":20,"column":1}},"line":18},"11":{"name":"(anonymous_11)","decl":{"start":{"line":22,"column":20},"end":{"line":22,"column":21}},"loc":{"start":{"line":22,"column":41},"end":{"line":24,"column":2}},"line":22},"12":{"name":"(anonymous_12)","decl":{"start":{"line":22,"column":75},"end":{"line":22,"column":76}},"loc":{"start":{"line":22,"column":88},"end":{"line":24,"column":1}},"line":22},"13":{"name":"(anonymous_13)","decl":{"start":{"line":26,"column":19},"end":{"line":26,"column":20}},"loc":{"start":{"line":26,"column":40},"end":{"line":28,"column":2}},"line":26},"14":{"name":"(anonymous_14)","decl":{"start":{"line":26,"column":74},"end":{"line":26,"column":75}},"loc":{"start":{"line":26,"column":87},"end":{"line":28,"column":1}},"line":26},"15":{"name":"(anonymous_15)","decl":{"start":{"line":30,"column":20},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":31},"end":{"line":32,"column":2}},"line":30},"16":{"name":"(anonymous_16)","decl":{"start":{"line":30,"column":65},"end":{"line":30,"column":66}},"loc":{"start":{"line":30,"column":78},"end":{"line":32,"column":1}},"line":30},"17":{"name":"(anonymous_17)","decl":{"start":{"line":34,"column":19},"end":{"line":34,"column":20}},"loc":{"start":{"line":34,"column":40},"end":{"line":36,"column":2}},"line":34},"18":{"name":"(anonymous_18)","decl":{"start":{"line":34,"column":74},"end":{"line":34,"column":75}},"loc":{"start":{"line":34,"column":87},"end":{"line":36,"column":1}},"line":34},"19":{"name":"(anonymous_19)","decl":{"start":{"line":38,"column":19},"end":{"line":38,"column":20}},"loc":{"start":{"line":38,"column":57},"end":{"line":40,"column":2}},"line":38},"20":{"name":"(anonymous_20)","decl":{"start":{"line":38,"column":91},"end":{"line":38,"column":92}},"loc":{"start":{"line":38,"column":104},"end":{"line":40,"column":1}},"line":38},"21":{"name":"(anonymous_21)","decl":{"start":{"line":42,"column":23},"end":{"line":42,"column":24}},"loc":{"start":{"line":42,"column":44},"end":{"line":44,"column":2}},"line":42},"22":{"name":"(anonymous_22)","decl":{"start":{"line":42,"column":78},"end":{"line":42,"column":79}},"loc":{"start":{"line":42,"column":91},"end":{"line":44,"column":1}},"line":42}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":13,"2":12,"3":13,"4":13,"5":13,"6":0,"7":0,"8":0,"9":0,"10":26,"11":13,"12":1,"13":1,"14":1,"15":1,"16":3,"17":3,"18":1,"19":1,"20":3,"21":3,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":2,"45":2,"46":1},"f":{"0":13,"1":13,"2":12,"3":13,"4":13,"5":0,"6":26,"7":3,"8":3,"9":3,"10":3,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":2,"22":2},"b":{"0":[1,1,1],"1":[1,12],"2":[13,13],"3":[13,13],"4":[13,13]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/modules/Todo/repository/todoRepository.ts","sources":["D:/Desktop Files/Todo-Backend/src/modules/Todo/repository/todoRepository.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,kEAAgE;AAEhE,MAAM,iBAAiB,GAAG,CAAO,KAAU,EAAE,EAAE;IAC7C,OAAO,MAAM,sBAAU,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7C,CAAC,CAAA,CAAC;AA2CA,8CAAiB;AA1CnB,MAAM,cAAc,GAAG,CAAO,KAAU,EAAE,QAAgB,EAAE,EAAE;IAC5D,OAAO,MAAM,sBAAU,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;AAC5E,CAAC,CAAA,CAAC;AAyCA,wCAAc;AAvChB,MAAM,WAAW,GAAG,CAAO,KAAU,EAAE,QAAgB,EAAE,EAAE;IACzD,OAAO,MAAM,sBAAU,CAAC,SAAS,CAC/B,EAAE,KAAK,EAAE,EACT,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAClC,CAAC;AACJ,CAAC,CAAA,CAAC;AAoCA,kCAAW;AAlCb,MAAM,UAAU,GAAG,CAAO,KAAU,EAAE,QAAgB,EAAE,EAAE;IACxD,OAAO,MAAM,sBAAU,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;AACtD,CAAC,CAAA,CAAC;AA+BA,gCAAU;AA7BZ,MAAM,WAAW,GAAG,CAAO,KAAU,EAAE,EAAE;IACvC,OAAO,MAAM,sBAAU,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAC1C,CAAC,CAAA,CAAC;AA6BA,kCAAW;AA5Bb,MAAM,UAAU,GAAG,CAAO,KAAU,EAAE,QAAgB,EAAE,EAAE;IACxD,OAAO,MAAM,sBAAU,CAAC,gBAAgB,CACtC,EAAE,KAAK,EAAE,EACT,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EACjC,EAAE,GAAG,EAAE,IAAI,EAAE,CACd,CAAC;AACJ,CAAC,CAAA,CAAC;AAuBA,gCAAU;AArBZ,MAAM,UAAU,GAAG,CACjB,KAAU,EACV,QAAgB,EAChB,eAAuB,EACvB,EAAE;IACF,OAAO,MAAM,sBAAU,CAAC,gBAAgB,CACtC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAC7B,EAAE,IAAI,EAAE,EAAE,YAAY,EAAE,eAAe,EAAE,EAAE,EAC3C,EAAE,GAAG,EAAE,IAAI,EAAE,CACd,CAAC;AACJ,CAAC,CAAA,CAAC;AAYA,gCAAU;AAVZ,MAAM,cAAc,GAAG,CAAO,KAAU,EAAE,QAAgB,EAAE,EAAE;IAC5D,OAAO,MAAM,sBAAU,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;AAC5E,CAAC,CAAA,CAAC;AASA,wCAAc","sourcesContent":["import { tasksModel } from \"../../../database/models/taskModel\";\r\n\r\nconst fetchExistingTask = async (email: any) => {\r\n  return await tasksModel.findOne({ email });\r\n};\r\nconst emailBasedTask = async (email: any, taskName: string) => {\r\n  return await tasksModel.findOne({ email, taskName: { $in: [taskName] } });\r\n};\r\n\r\nconst pushingTask = async (email: any, taskName: string) => {\r\n  return await tasksModel.updateOne(\r\n    { email },\r\n    { $push: { taskName: taskName } }\r\n  );\r\n};\r\n\r\nconst addingTask = async (email: any, taskName: string) => {\r\n  return await tasksModel.create({ email, taskName });\r\n};\r\n\r\nconst viewAllTask = async (email: any) => {\r\n  return await tasksModel.find({ email });\r\n};\r\nconst deleteTask = async (email: any, taskName: string) => {\r\n  return await tasksModel.findOneAndUpdate(\r\n    { email },\r\n    { $pull: { taskName: taskName } },\r\n    { new: true }\r\n  );\r\n};\r\n\r\nconst updateTask = async (\r\n  email: any,\r\n  taskName: string,\r\n  updatedTaskName: string\r\n) => {\r\n  return await tasksModel.findOneAndUpdate(\r\n    { email, taskName: taskName },\r\n    { $set: { \"taskName.$\": updatedTaskName } },\r\n    { new: true }\r\n  );\r\n};\r\n\r\nconst findSingleTask = async (email: any, taskName: string) => {\r\n  return await tasksModel.findOne({ email, taskName: { $in: [taskName] } });\r\n};\r\nexport {\r\n  fetchExistingTask,\r\n  emailBasedTask,\r\n  addingTask,\r\n  pushingTask,\r\n  viewAllTask,\r\n  deleteTask,\r\n  updateTask,\r\n  findSingleTask,\r\n};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"93ca2ebaee6f752a074e2efac03e3ec95342511e"},"D:\\Desktop Files\\Todo-Backend\\src\\utilities\\tokenVerify.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\utilities\\tokenVerify.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":63}},"17":{"start":{"line":17,"column":21},"end":{"line":17,"column":39}},"18":{"start":{"line":18,"column":22},"end":{"line":31,"column":2}},"19":{"start":{"line":18,"column":42},"end":{"line":31,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":30,"column":5}},"21":{"start":{"line":20,"column":27},"end":{"line":20,"column":52}},"22":{"start":{"line":21,"column":22},"end":{"line":21,"column":46}},"23":{"start":{"line":22,"column":28},"end":{"line":22,"column":84}},"24":{"start":{"line":23,"column":8},"end":{"line":26,"column":9}},"25":{"start":{"line":24,"column":12},"end":{"line":24,"column":41}},"26":{"start":{"line":25,"column":12},"end":{"line":25,"column":19}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":60}},"28":{"start":{"line":32,"column":0},"end":{"line":32,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":22},"end":{"line":18,"column":23}},"loc":{"start":{"line":18,"column":42},"end":{"line":31,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":76},"end":{"line":18,"column":77}},"loc":{"start":{"line":18,"column":89},"end":{"line":31,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":23,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":26,"column":9}},{"start":{"line":23,"column":8},"end":{"line":26,"column":9}}],"line":23}},"s":{"0":1,"1":8,"2":8,"3":8,"4":8,"5":8,"6":0,"7":0,"8":0,"9":0,"10":16,"11":8,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":8,"20":8,"21":8,"22":8,"23":8,"24":8,"25":8,"26":8,"27":0,"28":1},"f":{"0":8,"1":8,"2":8,"3":8,"4":8,"5":0,"6":16,"7":1,"8":8,"9":8},"b":{"0":[1,1,1],"1":[0,8],"2":[8,8],"3":[8,8],"4":[8,8],"5":[1,1,1],"6":[0,1],"7":[1,1],"8":[8,0]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/utilities/tokenVerify.ts","sources":["D:/Desktop Files/Todo-Backend/src/utilities/tokenVerify.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,gEAA+B;AAS/B,MAAM,YAAY,GAAG,kBAAkB,CAAC;AACxC,MAAM,aAAa,GAAG,CACpB,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,IAAI,CAAC;QACH,MAAM,UAAU,GAAQ,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;QAClD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC,MAAM,WAAW,GAAQ,MAAM,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QAC/D,IAAI,WAAW,EAAE,CAAC;YAChB,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC;YAC7B,IAAI,EAAE,CAAC;QACT,CAAC;IACH,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAClB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;AACH,CAAC,CAAA,CAAC;AACO,sCAAa","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport express, { Request, Response, NextFunction } from \"express\";\r\ndeclare global {\r\n  namespace Express {\r\n    interface Request {\r\n      user?: string;\r\n    }\r\n  }\r\n}\r\nconst TOKEN_SECRET = \"NeverTrustPeople\";\r\nconst validateToken = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  try {\r\n    const authHeader: any = req.headers.authorization;\r\n    const token = authHeader.split(\" \")[1];\r\n    const verifyToken: any = await jwt.verify(token, TOKEN_SECRET);\r\n    if (verifyToken) {\r\n      req.user = verifyToken.email;\r\n      next();\r\n    }\r\n  } catch (err: any) {\r\n    return res.status(500).json({ error: err.message });\r\n  }\r\n};\r\nexport { validateToken };\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"267928eedc8e14b968e3858ba9071619d3d1f4a3"},"D:\\Desktop Files\\Todo-Backend\\src\\modules\\users\\test\\users.spec.ts":{"path":"D:\\Desktop Files\\Todo-Backend\\src\\modules\\users\\test\\users.spec.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":14},"end":{"line":15,"column":54}},"16":{"start":{"line":16,"column":20},"end":{"line":16,"column":57}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":47}},"18":{"start":{"line":18,"column":20},"end":{"line":18,"column":57}},"19":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"20":{"start":{"line":20,"column":15},"end":{"line":20,"column":36}},"21":{"start":{"line":21,"column":0},"end":{"line":91,"column":3}},"22":{"start":{"line":22,"column":4},"end":{"line":33,"column":8}},"23":{"start":{"line":22,"column":49},"end":{"line":33,"column":6}},"24":{"start":{"line":23,"column":25},"end":{"line":27,"column":9}},"25":{"start":{"line":28,"column":25},"end":{"line":30,"column":27}},"26":{"start":{"line":31,"column":8},"end":{"line":31,"column":46}},"27":{"start":{"line":32,"column":8},"end":{"line":32,"column":61}},"28":{"start":{"line":34,"column":4},"end":{"line":45,"column":8}},"29":{"start":{"line":34,"column":70},"end":{"line":45,"column":6}},"30":{"start":{"line":35,"column":25},"end":{"line":39,"column":9}},"31":{"start":{"line":40,"column":25},"end":{"line":42,"column":27}},"32":{"start":{"line":43,"column":8},"end":{"line":43,"column":46}},"33":{"start":{"line":44,"column":8},"end":{"line":44,"column":55}},"34":{"start":{"line":46,"column":4},"end":{"line":56,"column":8}},"35":{"start":{"line":46,"column":63},"end":{"line":56,"column":6}},"36":{"start":{"line":47,"column":25},"end":{"line":50,"column":9}},"37":{"start":{"line":51,"column":25},"end":{"line":53,"column":27}},"38":{"start":{"line":54,"column":8},"end":{"line":54,"column":46}},"39":{"start":{"line":55,"column":8},"end":{"line":55,"column":60}},"40":{"start":{"line":57,"column":4},"end":{"line":67,"column":8}},"41":{"start":{"line":57,"column":66},"end":{"line":67,"column":6}},"42":{"start":{"line":58,"column":25},"end":{"line":61,"column":9}},"43":{"start":{"line":62,"column":25},"end":{"line":64,"column":27}},"44":{"start":{"line":65,"column":8},"end":{"line":65,"column":46}},"45":{"start":{"line":66,"column":8},"end":{"line":66,"column":63}},"46":{"start":{"line":68,"column":4},"end":{"line":78,"column":8}},"47":{"start":{"line":68,"column":74},"end":{"line":78,"column":6}},"48":{"start":{"line":69,"column":25},"end":{"line":72,"column":9}},"49":{"start":{"line":73,"column":25},"end":{"line":75,"column":27}},"50":{"start":{"line":76,"column":8},"end":{"line":76,"column":46}},"51":{"start":{"line":77,"column":8},"end":{"line":77,"column":59}},"52":{"start":{"line":79,"column":4},"end":{"line":90,"column":8}},"53":{"start":{"line":79,"column":69},"end":{"line":90,"column":6}},"54":{"start":{"line":80,"column":25},"end":{"line":84,"column":9}},"55":{"start":{"line":85,"column":25},"end":{"line":87,"column":27}},"56":{"start":{"line":88,"column":8},"end":{"line":88,"column":46}},"57":{"start":{"line":89,"column":8},"end":{"line":89,"column":199}},"58":{"start":{"line":92,"column":0},"end":{"line":120,"column":3}},"59":{"start":{"line":93,"column":4},"end":{"line":101,"column":8}},"60":{"start":{"line":93,"column":65},"end":{"line":101,"column":6}},"61":{"start":{"line":94,"column":25},"end":{"line":97,"column":9}},"62":{"start":{"line":98,"column":25},"end":{"line":98,"column":110}},"63":{"start":{"line":99,"column":8},"end":{"line":99,"column":46}},"64":{"start":{"line":100,"column":8},"end":{"line":100,"column":73}},"65":{"start":{"line":102,"column":4},"end":{"line":110,"column":8}},"66":{"start":{"line":102,"column":68},"end":{"line":110,"column":6}},"67":{"start":{"line":103,"column":25},"end":{"line":106,"column":9}},"68":{"start":{"line":107,"column":25},"end":{"line":107,"column":110}},"69":{"start":{"line":108,"column":8},"end":{"line":108,"column":46}},"70":{"start":{"line":109,"column":8},"end":{"line":109,"column":73}},"71":{"start":{"line":111,"column":4},"end":{"line":119,"column":8}},"72":{"start":{"line":111,"column":75},"end":{"line":119,"column":6}},"73":{"start":{"line":112,"column":25},"end":{"line":115,"column":9}},"74":{"start":{"line":116,"column":25},"end":{"line":116,"column":110}},"75":{"start":{"line":117,"column":8},"end":{"line":117,"column":46}},"76":{"start":{"line":118,"column":8},"end":{"line":118,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":34},"end":{"line":21,"column":35}},"loc":{"start":{"line":21,"column":40},"end":{"line":91,"column":1}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":43},"end":{"line":22,"column":44}},"loc":{"start":{"line":22,"column":49},"end":{"line":33,"column":6}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":22,"column":83},"end":{"line":22,"column":84}},"loc":{"start":{"line":22,"column":96},"end":{"line":33,"column":5}},"line":22},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":64},"end":{"line":34,"column":65}},"loc":{"start":{"line":34,"column":70},"end":{"line":45,"column":6}},"line":34},"12":{"name":"(anonymous_12)","decl":{"start":{"line":34,"column":104},"end":{"line":34,"column":105}},"loc":{"start":{"line":34,"column":117},"end":{"line":45,"column":5}},"line":34},"13":{"name":"(anonymous_13)","decl":{"start":{"line":46,"column":57},"end":{"line":46,"column":58}},"loc":{"start":{"line":46,"column":63},"end":{"line":56,"column":6}},"line":46},"14":{"name":"(anonymous_14)","decl":{"start":{"line":46,"column":97},"end":{"line":46,"column":98}},"loc":{"start":{"line":46,"column":110},"end":{"line":56,"column":5}},"line":46},"15":{"name":"(anonymous_15)","decl":{"start":{"line":57,"column":60},"end":{"line":57,"column":61}},"loc":{"start":{"line":57,"column":66},"end":{"line":67,"column":6}},"line":57},"16":{"name":"(anonymous_16)","decl":{"start":{"line":57,"column":100},"end":{"line":57,"column":101}},"loc":{"start":{"line":57,"column":113},"end":{"line":67,"column":5}},"line":57},"17":{"name":"(anonymous_17)","decl":{"start":{"line":68,"column":68},"end":{"line":68,"column":69}},"loc":{"start":{"line":68,"column":74},"end":{"line":78,"column":6}},"line":68},"18":{"name":"(anonymous_18)","decl":{"start":{"line":68,"column":108},"end":{"line":68,"column":109}},"loc":{"start":{"line":68,"column":121},"end":{"line":78,"column":5}},"line":68},"19":{"name":"(anonymous_19)","decl":{"start":{"line":79,"column":63},"end":{"line":79,"column":64}},"loc":{"start":{"line":79,"column":69},"end":{"line":90,"column":6}},"line":79},"20":{"name":"(anonymous_20)","decl":{"start":{"line":79,"column":103},"end":{"line":79,"column":104}},"loc":{"start":{"line":79,"column":116},"end":{"line":90,"column":5}},"line":79},"21":{"name":"(anonymous_21)","decl":{"start":{"line":92,"column":36},"end":{"line":92,"column":37}},"loc":{"start":{"line":92,"column":42},"end":{"line":120,"column":1}},"line":92},"22":{"name":"(anonymous_22)","decl":{"start":{"line":93,"column":59},"end":{"line":93,"column":60}},"loc":{"start":{"line":93,"column":65},"end":{"line":101,"column":6}},"line":93},"23":{"name":"(anonymous_23)","decl":{"start":{"line":93,"column":99},"end":{"line":93,"column":100}},"loc":{"start":{"line":93,"column":112},"end":{"line":101,"column":5}},"line":93},"24":{"name":"(anonymous_24)","decl":{"start":{"line":102,"column":62},"end":{"line":102,"column":63}},"loc":{"start":{"line":102,"column":68},"end":{"line":110,"column":6}},"line":102},"25":{"name":"(anonymous_25)","decl":{"start":{"line":102,"column":102},"end":{"line":102,"column":103}},"loc":{"start":{"line":102,"column":115},"end":{"line":110,"column":5}},"line":102},"26":{"name":"(anonymous_26)","decl":{"start":{"line":111,"column":69},"end":{"line":111,"column":70}},"loc":{"start":{"line":111,"column":75},"end":{"line":119,"column":6}},"line":111},"27":{"name":"(anonymous_27)","decl":{"start":{"line":111,"column":109},"end":{"line":111,"column":110}},"loc":{"start":{"line":111,"column":122},"end":{"line":119,"column":5}},"line":111}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":9,"2":9,"3":9,"4":9,"5":9,"6":0,"7":0,"8":0,"9":0,"10":18,"11":9,"12":1,"13":4,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1},"f":{"0":9,"1":9,"2":9,"3":9,"4":9,"5":0,"6":18,"7":4,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1},"b":{"0":[1,1,1],"1":[0,9],"2":[9,9],"3":[9,9],"4":[9,9],"5":[1,1,1],"6":[1,3],"7":[4,4]},"inputSourceMap":{"version":3,"file":"D:/Desktop Files/Todo-Backend/src/modules/users/test/users.spec.ts","sources":["D:/Desktop Files/Todo-Backend/src/modules/users/test/users.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import app from \"../../../app\";\r\nimport request from \"supertest\";\r\nimport chai from \"chai\";\r\nimport sinon from \"sinon\";\r\nimport chaiHttp from \"chai-http\";\r\n\r\nchai.use(chaiHttp);\r\n\r\nconst expect = chai.expect;\r\n\r\ndescribe(\"User Registration API\", () => {\r\n  it(\"should create a new user account\", async () => {\r\n    const userData = {\r\n      email: \"test@example.com\",\r\n      password: \"Password@123\",\r\n      confirm: \"Password@123\",\r\n    };\r\n    const response = await request(app)\r\n      .post(\"/api/users/registration\")\r\n      .send(userData);\r\n    expect(response.status).to.equal(200);\r\n    expect(response.body).to.equal(\"Account Is Created\");\r\n  });\r\n  it(\"should return conflict  if user email  already exists\", async () => {\r\n    const userData = {\r\n      email: \"test@example.com\",\r\n      password: \"Password@123\",\r\n      confirm: \"Password@123\",\r\n    };\r\n    const response = await request(app)\r\n      .post(\"/api/users/registration\")\r\n      .send(userData);\r\n    expect(response.status).to.equal(409);\r\n    expect(response.body).to.equal(\"Email in use\");\r\n  });\r\n  it(\"should return  Bad Request if email is missing\", async () => {\r\n    const userData = {\r\n      password: \"Password@123\",\r\n      confirm: \"Password@123\",\r\n    };\r\n    const response = await request(app)\r\n      .post(\"/api/users/registration\")\r\n      .send(userData);\r\n    expect(response.status).to.equal(400);\r\n    expect(response.body).to.equal(\"Email is required\");\r\n  });\r\n  it(\"should return  Bad Request if password is missing\", async () => {\r\n    const userData = {\r\n      email: \"test@example.com\",\r\n      confirm: \"Password@123\",\r\n    };\r\n    const response = await request(app)\r\n      .post(\"/api/users/registration\")\r\n      .send(userData);\r\n    expect(response.status).to.equal(400);\r\n    expect(response.body).to.equal(\"Password is required\");\r\n  });\r\n  it(\"should return  Bad Request if confirm password is missing\", async () => {\r\n    const userData = {\r\n      email: \"test@example.com\",\r\n      password: \"Password@123\",\r\n    };\r\n    const response = await request(app)\r\n      .post(\"/api/users/registration\")\r\n      .send(userData);\r\n    expect(response.status).to.equal(400);\r\n    expect(response.body).to.equal(\"confirm Password\");\r\n  });\r\n  it(\"should return  Bad Request if password is not strong\", async () => {\r\n    const userData = {\r\n      email: \"test@example.com\",\r\n      password: \"short\",\r\n      confirm: \"short\",\r\n    };\r\n    const response = await request(app)\r\n      .post(\"/api/users/registration\")\r\n      .send(userData);\r\n    expect(response.status).to.equal(400);\r\n    expect(response.body).to.equal(\r\n      \"Password must contain at least one lowercase letter, one uppercase letter, one numeric digit, one special character, and be between 8 and 30 characters long\"\r\n    );\r\n  });\r\n});\r\n\r\ndescribe(\"User Authentication API\", () => {\r\n  it(\"should return  Bad Request if email is incorrect\", async () => {\r\n    const userData = {\r\n      email: \"unknown@gmail.com\",\r\n      password: \"Password@123\",\r\n    };\r\n    const response = await request(app).post(\"/api/users/login\").send(userData);\r\n    expect(response.status).to.equal(400);\r\n    expect(response.body).to.equal(\"Email or Password is incorrect\");\r\n  });\r\n  it(\"should return  Bad Request if password is incorrect\", async () => {\r\n    const userData = {\r\n      email: \"test@example.com\",\r\n      password: \"incorrectPassword@123\",\r\n    };\r\n    const response = await request(app).post(\"/api/users/login\").send(userData);\r\n    expect(response.status).to.equal(400);\r\n    expect(response.body).to.equal(\"Email or Password is incorrect\");\r\n  });\r\n  it(\"should return string token if email or password is correct\", async () => {\r\n    const userData = {\r\n      email: \"test@example.com\",\r\n      password: \"Password@123\",\r\n    };\r\n    const response = await request(app).post(\"/api/users/login\").send(userData);\r\n    expect(response.status).to.equal(200);\r\n    expect(response.body).to.be.a(\"string\");\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b4e00c3abf83ee6850d3b3c5223389b44ba0a0a1"}}